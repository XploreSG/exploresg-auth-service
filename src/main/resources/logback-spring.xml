<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- Property definitions -->
    <property name="LOG_PATH" value="${LOG_PATH:-logs}"/>
    <property name="APP_NAME" value="exploresg-auth-service"/>
    
    <!-- Console appender for local development (human-readable) -->
    <springProfile name="dev,local">
        <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>
                    %d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) [%thread] [%X{correlationId:-NO_CORRELATION_ID}] %cyan(%logger{36}) - %msg%n
                </pattern>
            </encoder>
        </appender>
        
        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
        </root>
        
        <logger name="com.exploresg" level="DEBUG"/>
        <logger name="org.springframework.web" level="DEBUG"/>
        <logger name="org.springframework.security" level="DEBUG"/>
    </springProfile>

    <!-- JSON structured logging for staging and production (ELK/CloudWatch ready) -->
    <springProfile name="staging,prod">
        <!-- Async appender wrapper for better performance and memory management -->
        <appender name="ASYNC_JSON_CONSOLE" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="JSON_CONSOLE"/>
            <queueSize>512</queueSize>
            <discardingThreshold>0</discardingThreshold>
            <neverBlock>false</neverBlock>
            <maxFlushTime>5000</maxFlushTime>
        </appender>
        
        <appender name="JSON_CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                <!-- Add standard fields -->
                <fieldNames>
                    <timestamp>timestamp</timestamp>
                    <version>[ignore]</version>
                    <message>message</message>
                    <logger>logger</logger>
                    <thread>thread</thread>
                    <level>level</level>
                    <levelValue>[ignore]</levelValue>
                </fieldNames>
                
                <!-- Add custom fields -->
                <customFields>{"application":"${APP_NAME}","environment":"${SPRING_PROFILES_ACTIVE:-unknown}"}</customFields>
                
                <!-- Include MDC (correlation ID, user ID, etc.) -->
                <includeMdcKeyName>correlationId</includeMdcKeyName>
                <includeMdcKeyName>userId</includeMdcKeyName>
                <includeMdcKeyName>userEmail</includeMdcKeyName>
                <includeMdcKeyName>requestMethod</includeMdcKeyName>
                <includeMdcKeyName>requestPath</includeMdcKeyName>
                <includeMdcKeyName>clientIp</includeMdcKeyName>
                
                <!-- Include stack traces for errors -->
                <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                    <maxDepthPerThrowable>30</maxDepthPerThrowable>
                    <maxLength>2048</maxLength>
                    <shortenedClassNameLength>20</shortenedClassNameLength>
                    <exclude>^sun\.reflect\..*\.invoke</exclude>
                    <exclude>^net\.sf\.cglib\.proxy\.MethodProxy\.invoke</exclude>
                    <rootCauseFirst>true</rootCauseFirst>
                </throwableConverter>
                
                <!-- Pretty print for staging (easier debugging) -->
                <if condition='property("SPRING_PROFILES_ACTIVE").contains("staging")'>
                    <then>
                        <jsonGeneratorDecorator class="net.logstash.logback.decorate.CompositeJsonGeneratorDecorator">
                            <decorator class="net.logstash.logback.decorate.PrettyPrintingJsonGeneratorDecorator"/>
                        </jsonGeneratorDecorator>
                    </then>
                </if>
            </encoder>
        </appender>

        <!-- Async file appender for production (rotated daily) -->
        <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="FILE"/>
            <queueSize>256</queueSize>
            <discardingThreshold>0</discardingThreshold>
            <neverBlock>false</neverBlock>
        </appender>
        
        <!-- File appender for production (rotated daily) -->
        <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_PATH}/${APP_NAME}.log</file>
            <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                <customFields>{"application":"${APP_NAME}","environment":"${SPRING_PROFILES_ACTIVE:-unknown}"}</customFields>
            </encoder>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${LOG_PATH}/${APP_NAME}.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>30</maxHistory>
                <totalSizeCap>10GB</totalSizeCap>
            </rollingPolicy>
        </appender>

        <!-- Async error file appender (separate file for errors) -->
        <appender name="ASYNC_ERROR_FILE" class="ch.qos.logback.classic.AsyncAppender">
            <appender-ref ref="ERROR_FILE"/>
            <queueSize>128</queueSize>
            <discardingThreshold>0</discardingThreshold>
            <neverBlock>false</neverBlock>
        </appender>
        
        <!-- Error file appender (separate file for errors) -->
        <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_PATH}/${APP_NAME}-error.log</file>
            <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                <level>ERROR</level>
            </filter>
            <encoder class="net.logstash.logback.encoder.LogstashEncoder">
                <customFields>{"application":"${APP_NAME}","environment":"${SPRING_PROFILES_ACTIVE:-unknown}"}</customFields>
            </encoder>
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <fileNamePattern>${LOG_PATH}/${APP_NAME}-error.%d{yyyy-MM-dd}.log</fileNamePattern>
                <maxHistory>90</maxHistory>
                <totalSizeCap>5GB</totalSizeCap>
            </rollingPolicy>
        </appender>

        <root level="INFO">
            <appender-ref ref="ASYNC_JSON_CONSOLE"/>
            <appender-ref ref="ASYNC_FILE"/>
            <appender-ref ref="ASYNC_ERROR_FILE"/>
        </root>
        
        <!-- Application-specific logging -->
        <logger name="com.exploresg" level="INFO"/>
        
        <!-- Framework logging (reduced noise in production) -->
        <logger name="org.springframework.web" level="WARN"/>
        <logger name="org.springframework.security" level="WARN"/>
        <logger name="org.hibernate" level="WARN"/>
        <logger name="org.apache" level="WARN"/>
        
        <!-- Security audit trail (always INFO or higher) -->
        <logger name="com.exploresg.authservice.security" level="INFO"/>
        <logger name="com.exploresg.authservice.controller.AuthController" level="INFO"/>
        <logger name="com.exploresg.authservice.service.AuthenticationService" level="INFO"/>
    </springProfile>

    <!-- Integration test profile (minimal logging) -->
    <springProfile name="integration-test">
        <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>%d{HH:mm:ss.SSS} %-5level %logger{36} - %msg%n</pattern>
            </encoder>
        </appender>
        
        <root level="WARN">
            <appender-ref ref="CONSOLE"/>
        </root>
        
        <logger name="com.exploresg" level="INFO"/>
    </springProfile>
</configuration>
