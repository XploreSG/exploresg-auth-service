services:
  db:
    image: postgres:15
    container_name: dev-exploresg-auth-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-exploresg-auth-service-db}
      POSTGRES_USER: ${POSTGRES_USER:-exploresguser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-exploresgpass}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - xpl-auth-pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U exploresguser -d exploresg-auth-service-db",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    # This service does not need to be on the shared network
    networks:
      - default

  backend-auth-dev:
    build:
      context: .
    image: exploresg-auth-backend:dev
    container_name: dev-exploresg-auth-service
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB:-exploresg-auth-service-db}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-exploresguser}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-exploresgpass}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
      SERVER_PORT: ${SERVER_PORT:-8080}
    ports:
      - "${SERVER_PORT:-8080}:${SERVER_PORT:-8080}"
    restart: on-failure
    # --- ADD THIS SECTION ---
    # Connects the service to two networks:
    # 1. The 'default' network to talk to its own DB.
    # 2. The shared 'exploresg-network' to talk to other services.
    networks:
      - default
      - exploresg-network

volumes:
  xpl-auth-pgdata:

# Define the shared network as external
networks:
  exploresg-network:
    name: exploresg-net
    external: true
